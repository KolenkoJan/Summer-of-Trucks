@import "./Theme.scss";

/*
 * Predefined classes
 */

/*
 * Syntax:
 * .color-primary { color: #6750a4; }
 *
*/

$color-attributes: color, background-color;

@each $size, $value in $colors {
  @each $attribute in $color-attributes {
    .#{$attribute}-#{$size} {
      #{$attribute}: $value;
    }
  }
}

/*
 * Syntax:
 * .padding-xs: { padding: 2px; }
 *
*/

$spacing-attributes: padding, padding-top, padding-right, padding-bottom, padding-left, margin, margin-top, margin-right,
  margin-bottom, margin-left, gap;

@each $size, $value in $spacing-values {
  @each $attribute in $spacing-attributes {
    .#{$attribute}-#{$size} {
      #{$attribute}: $value;
    }
  }
}

/*
 * Syntax:
 * .min-width-s { min-width: 16px; }
 *
*/

$size-attributes: min-width, width, max-width, min-height, height, max-height;

@each $size, $value in $size-values {
  @each $attribute in $size-attributes {
    .#{$attribute}-#{$size} {
      #{$attribute}: $value;
    }
  }
}

// Predefined text

.cursor-pointer {
  cursor: pointer;
}

// Displays

$display-value: flex, block, inline, inline-block, inline-flex, table, inline-table, grid;

@each $value in $display-value {
  .#{$value} {
    display: $value;
  }
}

// Gaps

$gaps: gap, column-gap, row-gap;

@each $size, $value in $spacing-values {
  @each $attribute in $gaps {
    .#{$attribute}-#{$size} {
      #{$attribute}: $size;
    }
  };
};

// Flex directions

$flex-directions: row, column, row-reverse, column-reverse;

@each $value in $flex-directions {
  .flex-#{$value} {
    flex-direction: $value;
  }
}

// Justify-content

$justify-content: center, space-between, space-around, space-evenly, start, end; 

@each $value in $justify-content {
  .justify-#{$value} {
    justify-content: $value;
  }
}

// Align-content

$align-content: center, flex-start, flex-end, baseline, stretch;

@each $attribute in $align-content {
  .items-#{$attribute} {
    align-items: $attribute;
  }
}

